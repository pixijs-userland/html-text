/*!
 * @pixi/text-html - v3.3.1
 * Compiled Tue, 21 Feb 2023 16:51:59 UTC
 *
 * @pixi/text-html is licensed under the MIT License.
 * http://www.opensource.org/licenses/mit-license
 * 
 * Copyright 2023, Matt Karl <matt@mattkarl.com>, All Rights Reserved
 */import{Sprite as S}from"@pixi/sprite";import{settings as p,utils as a,Texture as T,Rectangle as f}from"@pixi/core";import{TextStyle as _}from"@pixi/text";var b=Object.defineProperty,v=Object.defineProperties,M=Object.getOwnPropertyDescriptors,w=Object.getOwnPropertySymbols,L=Object.prototype.hasOwnProperty,O=Object.prototype.propertyIsEnumerable,x=(e,t,s)=>t in e?b(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s,D=(e,t)=>{for(var s in t||(t={}))L.call(t,s)&&x(e,s,t[s]);if(w)for(var s of w(t))O.call(t,s)&&x(e,s,t[s]);return e},$=(e,t)=>v(e,M(t));const d=class extends _{constructor(){super(...arguments),this._fonts=[],this._overrides=[],this._stylesheet="",this.fontsDirty=!1}static from(t){return new d(Object.keys(d.defaultOptions).reduce((s,i)=>$(D({},s),{[i]:t[i]}),{}))}cleanFonts(){this._fonts.length>0&&(this._fonts.forEach(t=>{URL.revokeObjectURL(t.src),t.refs--,t.refs===0&&(t.fontFace&&document.fonts.delete(t.fontFace),delete d.availableFonts[t.originalUrl])}),this.fontFamily="Arial",this._fonts.length=0,this.styleID++,this.fontsDirty=!0)}loadFont(t,s={}){const{availableFonts:i}=d;if(i[t]){const o=i[t];return this._fonts.push(o),o.refs++,this.styleID++,this.fontsDirty=!0,Promise.resolve()}return p.ADAPTER.fetch(t).then(o=>o.blob()).then(async o=>new Promise((n,r)=>{const l=URL.createObjectURL(o),h=new FileReader;h.onload=()=>n([l,h.result]),h.onerror=r,h.readAsDataURL(o)})).then(async([o,n])=>{const r=Object.assign({family:a.path.basename(t,a.path.extname(t)),weight:"normal",style:"normal",src:o,dataSrc:n,refs:1,originalUrl:t,fontFace:null},s);i[t]=r,this._fonts.push(r),this.styleID++;const l=new FontFace(r.family,`url(${r.src})`,{weight:r.weight,style:r.style});r.fontFace=l,await l.load(),document.fonts.add(l),await document.fonts.ready,this.styleID++,this.fontsDirty=!0})}addOverride(...t){const s=t.filter(i=>!this._overrides.includes(i));s.length>0&&(this._overrides.push(...s),this.styleID++)}removeOverride(...t){const s=t.filter(i=>this._overrides.includes(i));s.length>0&&(this._overrides=this._overrides.filter(i=>!s.includes(i)),this.styleID++)}toCSS(t){return["display: inline-block",`color: ${this.normalizeColor(this.fill)}`,`font-size: ${this.fontSize*t}px`,`font-family: ${this.fontFamily}`,`font-weight: ${this.fontWeight}`,`font-style: ${this.fontStyle}`,`font-variant: ${this.fontVariant}`,`letter-spacing: ${this.letterSpacing*t}px`,`text-align: ${this.align}`,`padding: ${this.padding*t}px`,`white-space: ${this.whiteSpace}`,...this.lineHeight?[`line-height: ${this.lineHeight*t}px`]:[],...this.wordWrap?[`word-wrap: ${this.breakWords?"break-all":"break-word"}`,`max-width: ${this.wordWrapWidth*t}px`]:[],...this.strokeThickness?[`-webkit-text-stroke-width: ${this.strokeThickness*t}px`,`-webkit-text-stroke-color: ${this.normalizeColor(this.stroke)}`,`text-stroke-width: ${this.strokeThickness*t}px`,`text-stroke-color: ${this.normalizeColor(this.stroke)}`,"paint-order: stroke"]:[],...this.dropShadow?[this.dropShadowToCSS(t)]:[],...this._overrides].join(";")}toGlobalCSS(){return this._fonts.reduce((t,s)=>`${t}
            @font-face {
                font-family: "${s.family}";
                src: url('${s.dataSrc}');
                font-weight: ${s.weight};
                font-style: ${s.style}; 
            }`,this._stylesheet)}get stylesheet(){return this._stylesheet}set stylesheet(t){this._stylesheet!==t&&(this._stylesheet=t,this.styleID++)}normalizeColor(t){return Array.isArray(t)&&(t=a.rgb2hex(t)),typeof t=="number"?a.hex2string(t):t}dropShadowToCSS(t){let s=this.normalizeColor(this.dropShadowColor);const i=this.dropShadowAlpha,o=Math.round(Math.cos(this.dropShadowAngle)*this.dropShadowDistance),n=Math.round(Math.sin(this.dropShadowAngle)*this.dropShadowDistance);s.startsWith("#")&&i<1&&(s+=(i*255|0).toString(16).padStart(2,"0"));const r=`${o*t}px ${n*t}px`;return this.dropShadowBlur>0?`text-shadow: ${r} ${this.dropShadowBlur}px ${s}`:`text-shadow: ${r} ${s}`}reset(){Object.assign(this,d.defaultOptions)}onBeforeDraw(){const{fontsDirty:t}=this;return this.fontsDirty=!1,this.isSafari&&this._fonts.length>0&&t?new Promise(s=>setTimeout(s,100)):Promise.resolve()}get isSafari(){const{userAgent:t}=p.ADAPTER.getNavigator();return/^((?!chrome|android).)*safari/i.test(t)}set fillGradientStops(t){console.warn("[HTMLTextStyle] fillGradientStops is not supported by HTMLText")}get fillGradientStops(){return super.fillGradientStops}set fillGradientType(t){console.warn("[HTMLTextStyle] fillGradientType is not supported by HTMLText")}get fillGradientType(){return super.fillGradientType}set miterLimit(t){console.warn("[HTMLTextStyle] miterLimit is not supported by HTMLText")}get miterLimit(){return super.miterLimit}set trim(t){console.warn("[HTMLTextStyle] trim is not supported by HTMLText")}get trim(){return super.trim}set textBaseline(t){console.warn("[HTMLTextStyle] textBaseline is not supported by HTMLText")}get textBaseline(){return super.textBaseline}set leading(t){console.warn("[HTMLTextStyle] leading is not supported by HTMLText")}get leading(){return super.leading}set lineJoin(t){console.warn("[HTMLTextStyle] lineJoin is not supported by HTMLText")}get lineJoin(){return super.lineJoin}};let u=d;u.availableFonts={},u.defaultOptions={align:"left",breakWords:!1,dropShadow:!1,dropShadowAlpha:1,dropShadowAngle:Math.PI/6,dropShadowBlur:0,dropShadowColor:"black",dropShadowDistance:5,fill:"black",fontFamily:"Arial",fontSize:26,fontStyle:"normal",fontVariant:"normal",fontWeight:"normal",letterSpacing:0,lineHeight:0,padding:0,stroke:"black",strokeThickness:0,whiteSpace:"normal",wordWrap:!1,wordWrapWidth:100};const c=class extends S{constructor(e="",t={}){var s;const i=new Image,o=T.from(i,{scaleMode:p.SCALE_MODE,resourceOptions:{autoLoad:!1}});o.orig=new f,o.trim=new f,super(o),this._text=null,this._style=null,this._autoResolution=!0,this._loading=!1,this.localStyleID=-1,this.dirty=!1,this.ownsStyle=!1;const n="http://www.w3.org/2000/svg",r="http://www.w3.org/1999/xhtml",l=document.createElementNS(n,"svg"),h=document.createElementNS(n,"foreignObject"),y=document.createElementNS(r,"div"),m=document.createElementNS(r,"style");h.setAttribute("width","10000"),h.setAttribute("height","10000"),h.style.overflow="hidden",l.appendChild(h),this.maxWidth=c.defaultMaxWidth,this.maxHeight=c.defaultMaxHeight,this._domElement=y,this._styleElement=m,this._svgRoot=l,this._foreignObject=h,this._foreignObject.appendChild(m),this._foreignObject.appendChild(y),this._image=i,this._loadImage=new Image,this._autoResolution=c.defaultAutoResolution,this._resolution=(s=c.defaultResolution)!=null?s:p.RESOLUTION,this.text=e,this.style=t}measureText(e){var t,s;const{text:i,style:o,resolution:n}=Object.assign({text:this._text,style:this._style,resolution:this._resolution},e);Object.assign(this._domElement,{innerHTML:i,style:o.toCSS(n)}),this._styleElement.textContent=o.toGlobalCSS(),document.body.appendChild(this._svgRoot);const r=this._domElement.getBoundingClientRect();this._svgRoot.remove();const l=Math.min(this.maxWidth,Math.ceil(r.width)),h=Math.min(this.maxHeight,Math.ceil(r.height));return this._svgRoot.setAttribute("width",l.toString()),this._svgRoot.setAttribute("height",h.toString()),i!==this._text&&(this._domElement.innerHTML=this._text),o!==this._style&&(Object.assign(this._domElement,{style:(t=this._style)==null?void 0:t.toCSS(n)}),this._styleElement.textContent=(s=this._style)==null?void 0:s.toGlobalCSS()),{width:l+o.padding*2,height:h+o.padding*2}}async updateText(e=!0){const{style:t,_image:s,_loadImage:i}=this;if(this.localStyleID!==t.styleID&&(this.dirty=!0,this.localStyleID=t.styleID),!this.dirty&&e)return;const{width:o,height:n}=this.measureText();s.width=i.width=Math.ceil(Math.max(1,o)),s.height=i.height=Math.ceil(Math.max(1,n)),this._loading||(this._loading=!0,await new Promise(r=>{i.onload=async()=>{await t.onBeforeDraw(),this._loading=!1,s.src=i.src,i.onload=null,i.src="",this.updateTexture(),r()};const l=new XMLSerializer().serializeToString(this._svgRoot);i.src=`data:image/svg+xml;charset=utf8,${encodeURIComponent(l)}`}))}get source(){return this._image}get canvas(){return a.deprecation("3.2.0",'HTMLText property "canvas" is deprecated, use "source" instead.'),this._image}updateTexture(){const{style:e,texture:t,_image:s,resolution:i}=this,{padding:o}=e,{baseTexture:n}=t;t.trim.width=t._frame.width=s.width/i,t.trim.height=t._frame.height=s.height/i,t.trim.x=-o,t.trim.y=-o,t.orig.width=t._frame.width-o*2,t.orig.height=t._frame.height-o*2,this._onTextureUpdate(),n.setRealSize(s.width,s.height,i),this.dirty=!1}_render(e){this._autoResolution&&this._resolution!==e.resolution&&(this._resolution=e.resolution,this.dirty=!0),this.updateText(!0),super._render(e)}_renderCanvas(e){this._autoResolution&&this._resolution!==e.resolution&&(this._resolution=e.resolution,this.dirty=!0),this.updateText(!0),super._renderCanvas(e)}getLocalBounds(e){return this.updateText(!0),super.getLocalBounds(e)}_calculateBounds(){this.updateText(!0),this.calculateVertices(),this._bounds.addQuad(this.vertexData)}_onStyleChange(){this.dirty=!0}destroy(e){var t,s,i,o,n;typeof e=="boolean"&&(e={children:e}),e=Object.assign({},c.defaultDestroyOptions,e),super.destroy(e);const r=null;this.ownsStyle&&((t=this._style)==null||t.cleanFonts()),this._style=r,(s=this._svgRoot)==null||s.remove(),this._svgRoot=r,(i=this._domElement)==null||i.remove(),this._domElement=r,(o=this._foreignObject)==null||o.remove(),this._foreignObject=r,(n=this._styleElement)==null||n.remove(),this._styleElement=r,this._loadImage.src="",this._loadImage.onload=null,this._loadImage=r,this._image.src="",this._image=r}get width(){return this.updateText(!0),Math.abs(this.scale.x)*this._image.width/this.resolution}set width(e){this.updateText(!0);const t=a.sign(this.scale.x)||1;this.scale.x=t*e/this._image.width/this.resolution,this._width=e}get height(){return this.updateText(!0),Math.abs(this.scale.y)*this._image.height/this.resolution}set height(e){this.updateText(!0);const t=a.sign(this.scale.y)||1;this.scale.y=t*e/this._image.height/this.resolution,this._height=e}get style(){return this._style}set style(e){this._style!==e&&(e=e||{},e instanceof u?(this.ownsStyle=!1,this._style=e):e instanceof _?(console.warn("[HTMLText] Cloning TextStyle, if this is not what you want, use HTMLTextStyle"),this.ownsStyle=!0,this._style=u.from(e)):(this.ownsStyle=!0,this._style=new u(e)),this.localStyleID=-1,this.dirty=!0)}get text(){return this._text}set text(e){e=String(e===""||e===null||e===void 0?" ":e),e=this.sanitiseText(e),this._text!==e&&(this._text=e,this.dirty=!0)}get resolution(){return this._resolution}set resolution(e){this._autoResolution=!1,this._resolution!==e&&(this._resolution=e,this.dirty=!0)}sanitiseText(e){return e.replace(/<br>/gi,"<br/>").replace(/<hr>/gi,"<hr/>").replace(/&nbsp;/gi,"&#160;")}};let g=c;g.defaultDestroyOptions={texture:!0,children:!1,baseTexture:!0},g.defaultMaxWidth=2024,g.defaultMaxHeight=2024,g.defaultAutoResolution=!0;export{g as HTMLText,u as HTMLTextStyle};
//# sourceMappingURL=pixi-text-html.mjs.map
